{"version":3,"sources":["webpack:///./src/views/LifeCycle.vue","webpack:///./src/views/LifeCycle.vue?6b2b"],"names":["list","item","key","msg","setup","render"],"mappings":"+LACE,yBAIK,Y,2BAHH,yBAEK,2CAFc,EAAAA,MAAI,SAAZC,G,gCAAX,yBAEK,MAFqBC,IAAKD,EAAKE,K,CAClC,yBAAuB,uCAAhBF,EAAKE,KAAG,Q,QAON,OACbC,MADa,WAEX,MAAO,CACLJ,KAAM,CACJ,CAAEG,IAAK,sDACP,CAAEA,IAAK,oGACP,CAAEA,IAAK,6EACP,CAAEA,IAAK,mHCdf,EAAOE,OAASA,EAED","file":"js/chunk-2d0c02d1.b01c40c6.js","sourcesContent":["<template>\r\n  <ol>\r\n    <li v-for=\"item in list\" :key=\"item.msg\">\r\n      <h3>{{ item.msg }}</h3>\r\n    </li>\r\n  </ol>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  setup () {\r\n    return {\r\n      list: [\r\n        { msg: 'vue3.x 提供了可以在 setup 中通过在生命周期钩子前面加上 on 来访问组件的生命周期钩子' },\r\n        { msg: '因为 setup 是围绕 beforeCreate 和 created 生命周期钩子运行的，所以不需要显式地定义它们。换句话说，在这些钩子中编写的任何代码都应该直接在 setup 函数中编写。' },\r\n        { msg: 'vue3.x 废除了 2.x options API 生命周期中的 beforeDestroy destroyed 使用 unmounted 替代' },\r\n        { msg: 'renderTracked/onRenderTracked 和 renderTriggered/onRenderTriggered 貌似是可以监听数据变动的，用于调试仅在开发期间生效，而且官方也没给示例，慎用！！！' }\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./LifeCycle.vue?vue&type=template&id=3d738918\"\nimport script from \"./LifeCycle.vue?vue&type=script&lang=js\"\nexport * from \"./LifeCycle.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}