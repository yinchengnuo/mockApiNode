(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21a7b3"],{bc62:function(e,n,t){"use strict";t.r(n);var s=t("7a23"),c=Object(s["createVNode"])("div",null,"正在拼了命的加载",-1);function r(e,n,t,r,u,l){var o=Object(s["resolveComponent"])("SuspenseChild");return Object(s["openBlock"])(),Object(s["createBlock"])(s["Fragment"],null,[Object(s["createVNode"])("ol",null,[(Object(s["openBlock"])(!0),Object(s["createBlock"])(s["Fragment"],null,Object(s["renderList"])(r.list,(function(e){return Object(s["openBlock"])(),Object(s["createBlock"])("li",{key:e.msg,innerHTML:e.msg},null,8,["innerHTML"])})),128))]),(Object(s["openBlock"])(),Object(s["createBlock"])(s["Suspense"],null,{default:Object(s["withCtx"])((function(){return[Object(s["createVNode"])(o)]})),fallback:Object(s["withCtx"])((function(){return[c]})),_:1}))],64)}function u(e,n,t,c,r,u){return Object(s["openBlock"])(),Object(s["createBlock"])("h3",null,"SuspenseChild")}t("d3b7");var l={setup:function(){return new Promise((function(e){return setTimeout(e,3e3)}))}};l.render=u;var o=l,a={components:{SuspenseChild:o},setup:function(){return{list:[{msg:"vue3.x 提供了 suspense 内置组件允许在等待异步组件时渲染一些后备内容，可以让我们创建一个平滑的用户体验"},{msg:"suspense 组件使用时候不区分大小写，但是这仍是一个实验中 API，使用 suspense vue 会在控制台打印 <Suspense> is an experimental feature and its API will likely change."},{msg:"suspense 一般用于 在页面加载之前显示加载动画、显示占位符内容、处理延迟加载的图像等，而这些在 vue3.x 中只能通过 v-if/show 完成"},{msg:"suspense 使用插槽的方式控制占位组件和内容组件，分别用 #fallback 和 #default 声明，当使用 template 声明时，template 只能包含一个子组件"},{msg:"内容组件 #default 生效的前提是内容组件的 setup 必须 return 一个会被 resolve 的 promise"},{msg:"因为决定 suspense 状态的异步操作由内容组件 setup 的返回的 promise，因此对这些异步操作中可能出现的错误可以在父组件中使用 onErrorCaptured 监听"}]}}};a.render=r;n["default"]=a}}]);
//# sourceMappingURL=chunk-2d21a7b3.86c6df20.js.map