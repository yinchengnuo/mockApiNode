(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d217c20"],{c7a7:function(e,t,c){"use strict";c.r(t);var n=c("7a23");function o(e,t,c,o,p,u){return Object(n["openBlock"])(),Object(n["createBlock"])("ol",null,[(Object(n["openBlock"])(!0),Object(n["createBlock"])(n["Fragment"],null,Object(n["renderList"])(o.list,(function(e){return Object(n["openBlock"])(),Object(n["createBlock"])("li",{key:e.msg},[Object(n["createVNode"])("h3",null,Object(n["toDisplayString"])(e.msg),1)])})),128))])}var p={setup:function(){return{list:[{msg:"Vue 2.x 有许多全局 API 和配置，这些 API 和配置可以全局改变 Vue 的行为。如 Vue.component/directive/filter 等"},{msg:"虽然这种声明方式很方便，但它也会导致一些问题。从技术上讲，Vue 2 没有“app”的概念，我们定义的应用只是通过 new Vue() 创建的根 Vue 实例。从同一个 Vue 构造函数创建的每个根实例共享相同的全局配置"},{msg:"全局配置使得在同一页面上的多个“app”之间共享同一个 Vue 副本非常困难。为了解决这些问题，vue3.x 引入了 createApp"},{msg:"同时的，Vue 也由一个构造函数变成了一个对象"},{msg:"因此 vue2.x 中通过配置 Vue 构造函数的方式在 vue3.x 中变成了配置 app 实例，即 createApp 返回值"},{msg:"Vue.config/component/directive/mixin/use 变为 app.config/component/directive/mixin/use"},{msg:"Vue.config.ignoredElements 变为 app.config.isCustomElement"},{msg:"Vue.prototype 变为 app.config.globalProperties"},{msg:"vue3.x 新增 app.provide 实现注入全局依赖"},{msg:"可以在 createApp 中传入公共的 vue 实例来实现多个 vue 实例共享配置"}]}}};p.render=o;t["default"]=p}}]);
//# sourceMappingURL=chunk-2d217c20.d511179c.js.map